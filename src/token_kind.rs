use crate::common::*;

#[derive(Debug, Clone, PartialEq)]
pub(crate) enum TokenKind {
  And,
  Bang,
  BangEqual,
  BraceL,
  BraceR,
  Class,
  Comma,
  Dot,
  Else,
  Eof,
  Equal,
  EqualEqual,
  False,
  For,
  Fun,
  Greater,
  GreaterEqual,
  Identifier,
  If,
  Less,
  LessEqual,
  Minus,
  Nil,
  Number,
  Or,
  ParenL,
  ParenR,
  Plus,
  Print,
  Return,
  Semicolon,
  Slash,
  Star,
  StringLiteral,
  Super,
  This,
  True,
  Var,
  While,
  Whitespace,
}

impl Display for TokenKind {
  fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
    write!(
      f,
      "{}",
      match self {
        And => "&&",
        Bang => "!",
        BangEqual => "!=",
        BraceL => "{",
        BraceR => "}",
        Class => "class",
        Comma => ",",
        Dot => ".",
        Else => "else",
        Eof => "eof",
        Equal => "=",
        EqualEqual => "==",
        False => "false",
        For => "for",
        Fun => "fun",
        Greater => ">",
        GreaterEqual => ">=",
        Identifier => "ident",
        If => "if",
        Less => "<",
        LessEqual => "<=",
        Minus => "-",
        Nil => "nil",
        Number => "number",
        Or => "or",
        ParenL => "(",
        ParenR => ")",
        Plus => "+",
        Print => "print",
        Return => "return",
        Semicolon => ";",
        Slash => "/",
        Star => "*",
        StringLiteral => "string",
        Super => "super",
        This => "this",
        True => "true",
        Var => "var",
        While => "while",
        Whitespace => "",
      }
    )
  }
}
